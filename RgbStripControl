#include <CapacitiveSensor.h>
#include <Adafruit_NeoPixel.h>
#ifdef __AVR__
 #include <avr/power.h> // Required for 16 MHz Adafruit Trinket
#endif
#define PIN        9
#define NUMPIXELS 16
Adafruit_NeoPixel pixels(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800);
#define DELAYVAL 0

CapacitiveSensor   cs_2_4 = CapacitiveSensor(2,4); // 1M resistor between pins 4 & 8, pin 8 is sensor pin, add a wire and or foil
CapacitiveSensor   cs_6_8 = CapacitiveSensor(6,8); // 1M resistor between pins 4 & 8, pin 8 is sensor pin, add a wire and or foil
CapacitiveSensor   cs_7_12 = CapacitiveSensor(7,12); // 1M resistor between pins 4 & 8, pin 8 is sensor pin, add a wire and or foil



void setup() {                  
{
   cs_2_4.set_CS_AutocaL_Millis(0xFFFFFFFF);
   cs_6_8.set_CS_AutocaL_Millis(0xFFFFFFFF);
   cs_7_12.set_CS_AutocaL_Millis(0xFFFFFFFF);// turn off autocalibrate on channel 1 - just as an example
   Serial.begin(9600);
   pinMode(9,OUTPUT);
}
#if defined(__AVR_ATtiny85__) && (F_CPU == 16000000)
  clock_prescale_set(clock_div_1);
#endif
 pixels.begin();
}
void loop()                    
{
 long sensor1 =  cs_2_4.capacitiveSensor(50);
 long sensor2 =  cs_6_8.capacitiveSensor(50);
 long sensor3 =  cs_7_12.capacitiveSensor(50);

    Serial.println(sensor1);
    Serial.println(sensor2);
    Serial.println(sensor3);
   
   if(sensor1 >= 1000) {
    for(int i=0; i<NUMPIXELS; i++) {
    if(sensor1<=1000);
    pixels.setPixelColor(i, pixels.Color(0, 150, 0));
    pixels.show();
  }
   }else if (sensor2 >= 100) {
    for(int i=0; i<NUMPIXELS; i++) {
    if(sensor2 <= 100);
    pixels.setPixelColor(i, pixels.Color(0, 150, 0));
    pixels.show();
   }
   }else if (sensor3 >= 100) {
    for(int i=0; i<NUMPIXELS; i++) {
    if(sensor3 <= 100);
    pixels.setPixelColor(i, pixels.Color(0, 150, 0));
    pixels.show();
   }
    }
     else { for(int i=0; i<NUMPIXELS; i++) {
    pixels.clear();
    pixels.show();
   }  
  }
}
